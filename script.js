document.addEventListener("DOMContentLoaded", function() {
  // Define the URL of your API
  const apiUrl = "https://retoolapi.dev/KjWKX6/data"; // Replace with your actual API URL

  // Select the container where trending articles will be inserted
  const trendingArticlesContainer = document.getElementById("trending-articles");

  //initialise_data(apiUrl)

  // Function to fetch data from the API and populate the trending articles
  function fetchAndPopulateTrendingArticles() {
    console.log('Function fetchAndPopulateTrendingArticles called');
    fetch(apiUrl)
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        // Clear the container
        trendingArticlesContainer.innerHTML = "";

        // Loop through the data and create HTML elements for each article
        data.forEach((article, index) => {
          const trendingArticle = document.createElement("div");
          trendingArticle.classList.add("trending-article");

          // You may need to adapt the structure according to your API response
          trendingArticle.innerHTML = `
            <div class="article-image">
              <img src="imgs/nzqa.png" alt="Trending Article">
            </div>

            <div class="article-content">
              <h3 class="article-title">${index + 1}# ${article['article-title']}</h3>
              <p class="article-text">${article['article-content']}</p>
              <p class="article-category">Category: ${article['article-category']}</p>
              <a class="article-link" href="${article['article-link']}" target="_blank">Read Article</a>
            </div>

            <button id=${article.id} class="like-button">0</button>

            </a>
          `;

          trendingArticlesContainer.appendChild(trendingArticle);
        });
      })
      .catch((error) => {
        console.error("Error fetching data:", error);
      });
  }

  // Call the function to fetch and populate trending articles
  fetchAndPopulateTrendingArticles();
});

async function initialise_data(apiUrl) {
  // Our basis for checking whether our API url is newly generated is if it has an item with ID 1 (the dummy data generated by the tool)

  // Storing response
  const response = await fetch(apiUrl);

  // Storing data in form of JSON
  var data = await response.json();

  var has_dummy_data = data.some(function(item) { return item.id == 1 });

  if (has_dummy_data) {
    for (var item of data_setup) {
      console.log(item)
      await fetch(apiUrl, {
        method: "POST",
        body: JSON.stringify(item),
        headers: {
          "Content-type": "application/json; charset=UTF-8"
        }
      })
        .then((response) => response.json())
        .then((json) => console.log(json));
    }
  }
}
